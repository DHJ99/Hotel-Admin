name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: hotel_admin_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Run backend tests
      working-directory: ./backend
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/hotel_admin_test
        JWT_SECRET: test-secret
        NODE_ENV: test
    
    - name: Build backend
      working-directory: ./backend
      run: npm run build
    
    - name: Install frontend dependencies
      run: npm ci
    
    - name: Build frontend
      run: npm run build
    
    - name: Run frontend tests
      run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      working-directory: ./backend
      run: docker build -t hotel-admin-backend .
    
    - name: Log in to registry
      # Add your registry login here
      run: echo "Add registry login"
    
    - name: Push to registry
      # Add your registry push here
      run: echo "Add registry push"